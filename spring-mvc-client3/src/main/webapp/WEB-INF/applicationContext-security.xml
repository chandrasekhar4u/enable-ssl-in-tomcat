<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <debug />

    <global-method-security pre-post-annotations="enabled" />

<!-- There is no security requirement to access the html resources like css, js etc and maybe loggedout.jsp page -->
    <http pattern="/static/**" security="none"/>
    <http pattern="/loggedout.jsp" security="none"/>

    <http use-expressions="true">
<!-- Only supervisor can access secure1 webresources and all the resources under it and this resource can be accessed only if the request is https-->
    	<intercept-url pattern="/secure1/**" access="hasRole('supervisor')" requires-channel="https"/>
<!-- You have to be logged in to access secure folder and all resources under it -->
        <intercept-url pattern="/secure/**" access="isAuthenticated()" requires-channel="https"/>
<!-- You have to be logged in to access secure folder and all resources under it -->
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>

<!-- Here is where you provide a regular expression to extract user identity from the certificate and pass it to a authentication provider, in this example,
there is a dummy authentication provider as below, in real example, the auth provider is something like LDAP -->
    	<x509 subject-principal-regex="CN=(.*?)," user-service-ref="accountService" />        
    </http>

    <authentication-manager>
        <authentication-provider>
        <!-- Dummy anthentication provider -->
            <user-service id="accountService">
                <user name="client1" password="" authorities="supervisor" />
                <user name="client2" password="" authorities="user" />
 			</user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>